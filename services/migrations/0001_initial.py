# Generated by Django 5.2.4 on 2025-07-24 22:10

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('configurations', '0001_initial'),
        ('membership', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdjudicationMessageCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Message Code')),
                ('title', models.CharField(max_length=255, verbose_name='Message Title')),
                ('description', models.TextField(verbose_name='Message Description')),
                ('message_type', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('APPROVAL', 'Approval'), ('DECLINE', 'Decline')], max_length=10, verbose_name='Message Type')),
                ('is_visible_to_provider', models.BooleanField(default=True, verbose_name='Visible to Provider')),
                ('is_visible_to_member', models.BooleanField(default=False, verbose_name='Visible to Member')),
                ('category', models.CharField(blank=True, max_length=50, null=True, verbose_name='Category')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Adjudication Message Code',
                'verbose_name_plural': 'Adjudication Message Codes',
                'ordering': ['category', 'code'],
            },
        ),
        migrations.CreateModel(
            name='AdjudicationResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('result', models.CharField(choices=[('APPROVED', 'Approved'), ('PARTIALLY_APPROVED', 'Partially Approved'), ('DECLINED', 'Declined'), ('PENDING_REVIEW', 'Pending Review'), ('PENDING_CLINICAL', 'Pending Clinical Review'), ('PENDING_DOCS', 'Pending Documentation')], max_length=20, verbose_name='Result')),
                ('original_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Original Amount')),
                ('adjudicated_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Adjudicated Amount')),
                ('co_payment_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Co-payment Amount')),
                ('processing_type', models.CharField(choices=[('AUTOMATIC', 'Automatic'), ('MANUAL', 'Manual'), ('CLINICAL', 'Clinical Review')], default='AUTOMATIC', max_length=10, verbose_name='Processing Type')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processed At')),
                ('review_notes', models.TextField(blank=True, null=True, verbose_name='Review Notes')),
                ('decline_reason', models.TextField(blank=True, null=True, verbose_name='Decline Reason')),
                ('requires_manual_review', models.BooleanField(default=False, verbose_name='Requires Manual Review')),
                ('requires_clinical_review', models.BooleanField(default=False, verbose_name='Requires Clinical Review')),
                ('requires_documentation', models.BooleanField(default=False, verbose_name='Requires Documentation')),
                ('is_fraud_suspected', models.BooleanField(default=False, verbose_name='Fraud Suspected')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adjudicated_claims', to=settings.AUTH_USER_MODEL, verbose_name='Processed By')),
            ],
            options={
                'verbose_name': 'Adjudication Result',
                'verbose_name_plural': 'Adjudication Results',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdjudicationMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('custom_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Custom Title')),
                ('custom_description', models.TextField(blank=True, null=True, verbose_name='Custom Description')),
                ('context_data', models.JSONField(default=dict, verbose_name='Context Data')),
                ('sequence_number', models.PositiveIntegerField(default=1, verbose_name='Sequence Number')),
                ('message_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjudication_messages', to='services.adjudicationmessagecode', verbose_name='Message Code')),
                ('adjudication_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='services.adjudicationresult', verbose_name='Adjudication Result')),
            ],
            options={
                'verbose_name': 'Adjudication Message',
                'verbose_name_plural': 'Adjudication Messages',
                'ordering': ['adjudication_result', 'sequence_number'],
            },
        ),
        migrations.CreateModel(
            name='AdjudicationRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Rule Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('rule_type', models.CharField(choices=[('C', 'Claim'), ('SR', 'Service Request'), ('B', 'Both')], default='B', max_length=2, verbose_name='Rule Type')),
                ('min_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Minimum Amount')),
                ('max_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Maximum Amount')),
                ('beneficiary_type', models.CharField(choices=[('P', 'Principal'), ('S', 'Spouse'), ('D', 'Dependent'), ('E', 'Employee'), ('A', 'All')], default='A', max_length=1, verbose_name='Beneficiary Type')),
                ('member_types', models.CharField(blank=True, max_length=50, null=True, verbose_name='Member Types (comma-separated)')),
                ('max_days_from_service', models.PositiveIntegerField(default=0, verbose_name='Max Days from Service')),
                ('max_visits_per_year', models.PositiveIntegerField(default=0, verbose_name='Max Visits Per Year')),
                ('max_visits_per_month', models.PositiveIntegerField(default=0, verbose_name='Max Visits Per Month')),
                ('min_age', models.PositiveIntegerField(default=0, verbose_name='Minimum Age')),
                ('max_age', models.PositiveIntegerField(default=0, verbose_name='Maximum Age')),
                ('requires_referral', models.BooleanField(default=False, verbose_name='Requires Referral')),
                ('requires_prior_auth', models.BooleanField(default=False, verbose_name='Requires Prior Authorization')),
                ('requires_supporting_docs', models.BooleanField(default=False, verbose_name='Requires Supporting Documents')),
                ('chronic_condition_only', models.BooleanField(default=False, verbose_name='Chronic Condition Only')),
                ('wellness_visit_only', models.BooleanField(default=False, verbose_name='Wellness Visit Only')),
                ('action', models.CharField(choices=[('AUTO_APPROVE', 'Auto Approve'), ('AUTO_DECLINE', 'Auto Decline'), ('MANUAL_REVIEW', 'Manual Review'), ('CLINICAL_REVIEW', 'Clinical Review'), ('REDUCE_AMOUNT', 'Reduce Amount')], default='AUTO_APPROVE', max_length=20, verbose_name='Action')),
                ('reduction_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Reduction Percentage')),
                ('reduction_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Reduction Amount')),
                ('co_payment_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Co-payment Percentage')),
                ('co_payment_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Co-payment Amount')),
                ('priority', models.PositiveIntegerField(default=100, verbose_name='Priority')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('effective_from', models.DateField(verbose_name='Effective From')),
                ('effective_to', models.DateField(blank=True, null=True, verbose_name='Effective To')),
                ('provider_tiers', models.ManyToManyField(blank=True, to='configurations.tier', verbose_name='Provider Tiers')),
                ('service_provider_type', models.ManyToManyField(blank=True, to='configurations.serviceprovidertype', verbose_name='Categories')),
                ('services', models.ManyToManyField(blank=True, to='configurations.service', verbose_name='Services')),
            ],
            options={
                'verbose_name': 'Adjudication Rule',
                'verbose_name_plural': 'Adjudication Rules',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AdjudicationRuleApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('was_triggered', models.BooleanField(default=False, verbose_name='Was Triggered')),
                ('conditions_met', models.JSONField(default=dict, verbose_name='Conditions Met')),
                ('amount_before', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Amount Before')),
                ('amount_after', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Amount After')),
                ('adjudication_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.adjudicationresult', verbose_name='Adjudication Result')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.adjudicationrule', verbose_name='Rule')),
            ],
            options={
                'verbose_name': 'Rule Application',
                'verbose_name_plural': 'Rule Applications',
            },
        ),
        migrations.AddField(
            model_name='adjudicationresult',
            name='rules_applied',
            field=models.ManyToManyField(through='services.AdjudicationRuleApplication', to='services.adjudicationrule', verbose_name='Rules Applied'),
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('transaction_number', models.CharField(max_length=20, unique=True, verbose_name='Transaction Number')),
                ('invoice_number', models.CharField(max_length=255, verbose_name='Invoice Number')),
                ('claimed_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Claimed Amount')),
                ('accepted_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Accepted Amount')),
                ('adjudicated_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Adjudicated Amount')),
                ('shortfall_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Shortfall Amount')),
                ('previously_paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Previously Paid Amount')),
                ('paid_to_provider_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Paid to Provider Amount')),
                ('paid_to_member_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Paid to Member Amount')),
                ('admin_fee', models.DecimalField(decimal_places=3, default=0, max_digits=20, verbose_name='Administration Fee')),
                ('paid_date', models.DateTimeField(blank=True, null=True, verbose_name='Paid Date')),
                ('whom_to_pay', models.CharField(choices=[('P', 'Provider'), ('M', 'Member'), ('B', 'Both')], max_length=1, verbose_name='Whom To Pay')),
                ('rate', models.DecimalField(decimal_places=8, default=1, max_digits=14, verbose_name='Exchange Rate')),
                ('referring_provider_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Referring Provider Number')),
                ('referring_provider_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Referring Provider Name')),
                ('status', models.CharField(choices=[('N', 'New'), ('U', 'Under Review'), ('A', 'Approved'), ('P', 'Paid'), ('D', 'Declined'), ('C', 'Cancelled')], default='N', max_length=1, verbose_name='Status')),
                ('reversed', models.BooleanField(default=False, verbose_name='Reversed')),
                ('wellness_visit', models.BooleanField(default=False, verbose_name='Is Wellness Visit')),
                ('automatic_adjudication', models.BooleanField(default=False, verbose_name='Automatic Adjudication')),
                ('manual_adjudication', models.BooleanField(default=False, verbose_name='Manual Adjudication')),
                ('start_date', models.DateField(verbose_name='Service Start Date')),
                ('end_date', models.DateField(verbose_name='Service End Date')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.beneficiary', verbose_name='Beneficiary')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.serviceprovider', verbose_name='Service Provider')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Submitted By')),
            ],
            options={
                'verbose_name': 'Claim',
                'verbose_name_plural': 'Claims',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='adjudicationresult',
            name='claim',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='adjudication_results', to='services.claim'),
        ),
        migrations.CreateModel(
            name='ClaimServiceLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('service_date', models.DateField(verbose_name='Service Date')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Unit Price')),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=14, verbose_name='Quantity')),
                ('claimed_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Claimed Amount')),
                ('accepted_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Accepted Amount')),
                ('adjudicated_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Adjudicated Amount')),
                ('shortfall_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Shortfall Amount')),
                ('previously_paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Previously Paid Amount')),
                ('paid_to_provider_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Paid to Provider Amount')),
                ('paid_to_member_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Paid to Member Amount')),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='services.claim')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claim_lines', to='configurations.service')),
            ],
            options={
                'verbose_name': 'Claim Service Line',
                'verbose_name_plural': 'Claim Service Lines',
                'ordering': ['service__code'],
            },
        ),
        migrations.CreateModel(
            name='ProviderPaymentStatement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('statement_number', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Statement Number')),
                ('statement_date', models.DateField(verbose_name='Statement Date')),
                ('period_from', models.DateField(verbose_name='Period From')),
                ('period_to', models.DateField(verbose_name='Period To')),
                ('total_claims_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Total Claims Amount')),
                ('total_approved_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Total Approved Amount')),
                ('total_withheld_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Total Withheld Amount')),
                ('total_fees_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Total Fees Amount')),
                ('net_payment_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Net Payment Amount')),
                ('has_compliance_issues', models.BooleanField(default=False, verbose_name='Has Compliance Issues')),
                ('compliance_notes', models.TextField(blank=True, null=True, verbose_name='Compliance Notes')),
                ('status', models.CharField(choices=[('G', 'Generated'), ('S', 'Sent'), ('P', 'Paid'), ('H', 'On Hold'), ('C', 'Cancelled')], default='G', max_length=1, verbose_name='Statement Status')),
                ('payment_reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Payment Reference')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Payment Date')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='Generated At')),
                ('expired_documents', models.ManyToManyField(blank=True, related_name='statements_expired', to='configurations.serviceproviderdocumenttype', verbose_name='Expired Documents')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Generated By')),
                ('missing_documents', models.ManyToManyField(blank=True, related_name='statements_missing', to='configurations.serviceproviderdocumenttype', verbose_name='Missing Documents')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configurations.paymentmethod', verbose_name='Payment Method')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_statements', to='configurations.serviceprovider')),
            ],
            options={
                'verbose_name': 'Provider Payment Statement',
                'verbose_name_plural': 'Provider Payment Statements',
                'ordering': ['-statement_date'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('request_number', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Request Number')),
                ('priority', models.CharField(choices=[('R', 'Routine'), ('U', 'Urgent'), ('E', 'Emergency')], default='R', max_length=1, verbose_name='Priority')),
                ('approval_type', models.CharField(choices=[('A', 'Automatic'), ('M', 'Manual'), ('C', 'Clinical')], default='A', max_length=1, verbose_name='Approval Type')),
                ('chief_complaint', models.TextField(verbose_name='Chief Complaint')),
                ('clinical_history', models.TextField(blank=True, null=True, verbose_name='Clinical History')),
                ('planned_treatment', models.TextField(verbose_name='Planned Treatment')),
                ('estimated_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Estimated Amount')),
                ('approved_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Approved Amount')),
                ('requested_date', models.DateField(auto_now_add=True, verbose_name='Requested Date')),
                ('proposed_service_date', models.DateField(verbose_name='Proposed Service Date')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Authorization Expiry')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('U', 'Under Review'), ('A', 'Approved'), ('PA', 'Partially Approved'), ('D', 'Declined'), ('E', 'Expired'), ('C', 'Cancelled'), ('UT', 'Utilized')], default='P', max_length=2, verbose_name='Status')),
                ('review_date', models.DateTimeField(blank=True, null=True, verbose_name='Review Date')),
                ('approval_date', models.DateTimeField(blank=True, null=True, verbose_name='Approval Date')),
                ('review_notes', models.TextField(blank=True, null=True, verbose_name='Review Notes')),
                ('decline_reason', models.TextField(blank=True, null=True, verbose_name='Decline Reason')),
                ('supporting_document_1', models.FileField(blank=True, null=True, upload_to='service_requests/', verbose_name='Supporting Document 1')),
                ('supporting_document_2', models.FileField(blank=True, null=True, upload_to='service_requests/', verbose_name='Supporting Document 2')),
                ('supporting_document_3', models.FileField(blank=True, null=True, upload_to='service_requests/', verbose_name='Supporting Document 3')),
                ('authorization_code', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Authorization Code')),
                ('utilization_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Utilized Amount')),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Remaining Amount')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_service_requests', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to='membership.beneficiary', verbose_name='Beneficiary')),
                ('referring_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referred_service_requests', to='configurations.serviceprovider', verbose_name='Referring Provider')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to=settings.AUTH_USER_MODEL, verbose_name='Requested By')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_service_requests', to=settings.AUTH_USER_MODEL, verbose_name='Reviewed By')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to='configurations.serviceprovider', verbose_name='Service Provider')),
            ],
            options={
                'verbose_name': 'Service Request',
                'verbose_name_plural': 'Service Requests',
                'ordering': ['-requested_date', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='claim',
            name='service_request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='services.servicerequest', verbose_name='Related Service Request'),
        ),
        migrations.AddField(
            model_name='adjudicationresult',
            name='service_request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='adjudication_results', to='services.servicerequest'),
        ),
        migrations.CreateModel(
            name='ServiceRequestItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10, verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Unit Price')),
                ('estimated_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Estimated Amount')),
                ('approved_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Approved Amount')),
                ('clinical_justification', models.TextField(blank=True, null=True, verbose_name='Clinical Justification')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('PA', 'Partially Approved'), ('D', 'Declined')], default='P', max_length=2, verbose_name='Status')),
                ('decline_reason', models.TextField(blank=True, null=True, verbose_name='Decline Reason')),
                ('utilization_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Utilization Quantity')),
                ('utilization_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Utilization Amount')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_items', to='configurations.service')),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='services.servicerequest', verbose_name='Service Request')),
            ],
            options={
                'verbose_name': 'Service Request Item',
                'verbose_name_plural': 'Service Request Items',
                'ordering': ['service__code'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='claim',
            unique_together={('provider', 'invoice_number')},
        ),
    ]
