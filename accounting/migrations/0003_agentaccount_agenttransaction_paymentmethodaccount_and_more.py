# Generated by Django 5.2.4 on 2025-07-29 18:15

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0002_initial'),
        ('configurations', '0005_alter_member_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Current Balance')),
                ('available_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Available Balance')),
                ('pending_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Pending Balance')),
                ('total_commissions_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Total Commissions Earned')),
                ('total_commissions_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Total Commissions Paid')),
                ('pending_commissions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Pending Commissions')),
                ('total_debited', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Total Debited')),
                ('total_credited', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Total Credited')),
                ('total_withholding', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Total Withholding')),
                ('total_deductions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Total Deductions')),
                ('minimum_payout_amount', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Minimum Payout Amount')),
                ('payout_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('on_demand', 'On Demand')], default='monthly', max_length=15, verbose_name='Payout Frequency')),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('S', 'Suspended'), ('C', 'Closed'), ('H', 'On Hold')], default='A', max_length=1, verbose_name='Account Status')),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bank Name')),
                ('bank_account_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank Account Number')),
                ('bank_routing_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank Routing Number')),
                ('bank_account_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bank Account Name')),
                ('tax_id_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tax ID Number')),
                ('withholding_tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Withholding Tax Rate %')),
                ('last_payout_date', models.DateField(blank=True, null=True, verbose_name='Last Payout Date')),
                ('last_payout_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Last Payout Amount')),
                ('next_payout_date', models.DateField(blank=True, null=True, verbose_name='Next Payout Date')),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account', to='configurations.agent', verbose_name='Agent')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_accounts', to='configurations.currency', verbose_name='Currency')),
                ('preferred_payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_accounts', to='configurations.paymentmethod', verbose_name='Preferred Payment Method')),
            ],
            options={
                'verbose_name': 'Agent Account',
                'verbose_name_plural': 'Agent Accounts',
                'ordering': ['agent__name'],
                'unique_together': {('agent', 'currency')},
            },
        ),
        migrations.CreateModel(
            name='AgentTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('transaction_number', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Transaction Number')),
                ('transaction_type', models.CharField(choices=[('commission_earned', 'Commission Earned'), ('commission_payout', 'Commission Payout'), ('bonus', 'Bonus Payment'), ('deduction', 'Deduction'), ('withholding', 'Tax Withholding'), ('adjustment', 'Manual Adjustment'), ('refund', 'Refund'), ('chargeback', 'Chargeback'), ('penalty', 'Penalty'), ('advance', 'Advance Payment'), ('advance_recovery', 'Advance Recovery')], max_length=20, verbose_name='Transaction Type')),
                ('debited_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Debited Amount')),
                ('credited_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Credited Amount')),
                ('withholding_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Withholding Amount')),
                ('deduction_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Deduction Amount')),
                ('net_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Net Amount')),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Balance After Transaction')),
                ('commission_balance_after', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Commission Balance After')),
                ('description', models.TextField(verbose_name='Description')),
                ('reference_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reference Number')),
                ('commission_period_from', models.DateField(blank=True, null=True, verbose_name='Commission Period From')),
                ('commission_period_to', models.DateField(blank=True, null=True, verbose_name='Commission Period To')),
                ('payment_reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Payment Reference')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Payment Date')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('C', 'Completed'), ('F', 'Failed'), ('R', 'Reversed'), ('H', 'On Hold')], default='P', max_length=1, verbose_name='Transaction Status')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processed At')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('tax_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tax Year')),
                ('tax_period', models.CharField(blank=True, max_length=10, null=True, verbose_name='Tax Period')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accounting.agentaccount', verbose_name='Agent Account')),
                ('agent_commission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_transactions', to='configurations.agentcommission', verbose_name='Related Commission')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_agent_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('member_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_transactions', to='accounting.membertransaction', verbose_name='Related Member Transaction')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_transactions', to='configurations.paymentmethod', verbose_name='Payment Method')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_agent_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Processed By')),
            ],
            options={
                'verbose_name': 'Agent Transaction',
                'verbose_name_plural': 'Agent Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethodAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Current Balance')),
                ('available_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Available Balance')),
                ('pending_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Pending Balance')),
                ('total_debited', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Total Debited')),
                ('total_credited', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Total Credited')),
                ('total_processing_fees', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Total Processing Fees')),
                ('daily_transaction_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Daily Transaction Limit')),
                ('monthly_transaction_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Monthly Transaction Limit')),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('S', 'Suspended'), ('C', 'Closed')], default='A', max_length=1, verbose_name='Account Status')),
                ('last_reconciled_at', models.DateTimeField(blank=True, null=True, verbose_name='Last Reconciled At')),
                ('reconciliation_variance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, verbose_name='Reconciliation Variance')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_method_accounts', to='configurations.currency', verbose_name='Currency')),
                ('payment_method', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account', to='configurations.paymentmethod', verbose_name='Payment Method')),
            ],
            options={
                'verbose_name': 'Payment Method Account',
                'verbose_name_plural': 'Payment Method Accounts',
                'ordering': ['payment_method__name'],
                'unique_together': {('payment_method', 'currency')},
            },
        ),
        migrations.CreateModel(
            name='PaymentMethodTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('transaction_number', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Transaction Number')),
                ('transaction_type', models.CharField(choices=[('top_up_fee', 'Top-up Processing Fee'), ('claim_fee', 'Claim Processing Fee'), ('refund', 'Refund'), ('adjustment', 'Manual Adjustment'), ('reconciliation', 'Reconciliation'), ('gateway_fee', 'Gateway Fee'), ('settlement', 'Settlement'), ('chargeback', 'Chargeback')], max_length=20, verbose_name='Transaction Type')),
                ('debited_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Debited Amount')),
                ('credited_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Credited Amount')),
                ('processing_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Processing Fee')),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Balance After Transaction')),
                ('available_balance_after', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Available Balance After')),
                ('description', models.TextField(verbose_name='Description')),
                ('reference_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reference Number')),
                ('external_reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='External Reference')),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Gateway Transaction ID')),
                ('gateway_response_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Gateway Response Code')),
                ('gateway_response_message', models.TextField(blank=True, null=True, verbose_name='Gateway Response Message')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('C', 'Completed'), ('F', 'Failed'), ('R', 'Reversed'), ('S', 'Settled')], default='P', max_length=1, verbose_name='Transaction Status')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processed At')),
                ('settlement_date', models.DateField(blank=True, null=True, verbose_name='Settlement Date')),
                ('settlement_reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Settlement Reference')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accounting.paymentmethodaccount', verbose_name='Payment Method Account')),
                ('member_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_method_transactions', to='accounting.membertransaction', verbose_name='Related Member Transaction')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payment_method_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Processed By')),
                ('provider_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_method_transactions', to='accounting.providertransaction', verbose_name='Related Provider Transaction')),
            ],
            options={
                'verbose_name': 'Payment Method Transaction',
                'verbose_name_plural': 'Payment Method Transactions',
                'ordering': ['-created_at'],
            },
        ),
    ]
