# Generated by Django 5.2.4 on 2025-07-24 22:08

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('account_no', models.CharField(db_index=True, editable=False, max_length=255, unique=True, verbose_name='Agent Number')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Agent Name')),
                ('alias', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Alias')),
                ('identification_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID Number')),
                ('address_line_1', models.CharField(max_length=255, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('address_line_3', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 3')),
                ('mobile', models.CharField(max_length=20, verbose_name='Mobile Number')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telephone')),
                ('email', models.EmailField(max_length=255, verbose_name='Email Address')),
                ('type', models.CharField(choices=[('I', 'Individual'), ('C', 'Corporate'), ('B', 'Internal')], default='I', max_length=1, verbose_name='Agent Type')),
                ('base_commission_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Base Commission Rate %')),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('S', 'Suspended')], default='A', max_length=1, verbose_name='Status')),
                ('date_joined', models.DateField(auto_now_add=True, verbose_name='Date Joined')),
            ],
            options={
                'verbose_name': 'Agent',
                'verbose_name_plural': 'Agents',
                'ordering': ['account_no'],
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Currency Code')),
                ('name', models.CharField(max_length=100, verbose_name='Currency Name')),
                ('symbol', models.CharField(max_length=5, verbose_name='Currency Symbol')),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1.0, max_digits=15, verbose_name='Exchange Rate to Base Currency')),
                ('is_base_currency', models.BooleanField(default=False, verbose_name='Is Base Currency')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='MemberKYCRequirement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Requirement Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('requirement_type', models.CharField(choices=[('document', 'Document Upload'), ('verification', 'Identity Verification'), ('information', 'Information Provision'), ('declaration', 'Declaration/Consent')], max_length=15, verbose_name='Requirement Type')),
                ('member_types', models.CharField(blank=True, max_length=50, null=True, verbose_name='Applicable Member Types (comma-separated)')),
                ('is_mandatory', models.BooleanField(default=True, verbose_name='Is Mandatory')),
                ('accepted_file_types', models.CharField(blank=True, max_length=255, null=True, verbose_name='Accepted File Types')),
                ('max_file_size_mb', models.PositiveIntegerField(default=5, verbose_name='Max File Size (MB)')),
                ('has_expiry', models.BooleanField(default=False, verbose_name='Has Expiry Date')),
                ('requires_manual_verification', models.BooleanField(default=False, verbose_name='Requires Manual Verification')),
                ('auto_verify_conditions', models.TextField(blank=True, null=True, verbose_name='Auto Verification Conditions')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('sort_order', models.PositiveIntegerField(default=100, verbose_name='Sort Order')),
            ],
            options={
                'verbose_name': 'Member KYC Requirement',
                'verbose_name_plural': 'Member KYC Requirements',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Package Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('global_annual_limit', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Global Annual Limit')),
                ('global_family_limit', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Global Family Annual Limit')),
                ('monthly_contribution', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Monthly Contribution')),
                ('child_monthly_contribution', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Child Monthly Contribution')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Package',
                'verbose_name_plural': 'Packages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Gateway Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('base_url', models.URLField(verbose_name='Base URL')),
                ('api_version', models.CharField(blank=True, max_length=50, null=True, verbose_name='API Version')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Username')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Password')),
                ('api_key', models.CharField(blank=True, max_length=500, null=True, verbose_name='API Key')),
                ('secret_key', models.CharField(blank=True, max_length=500, null=True, verbose_name='Secret Key')),
                ('timeout_seconds', models.PositiveIntegerField(default=30, verbose_name='Timeout (Seconds)')),
                ('retry_attempts', models.PositiveIntegerField(default=3, verbose_name='Retry Attempts')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_test_mode', models.BooleanField(default=False, verbose_name='Is Test Mode')),
                ('supports_payment', models.BooleanField(default=True, verbose_name='Supports Payment')),
                ('supports_refund', models.BooleanField(default=False, verbose_name='Supports Refund')),
                ('supports_inquiry', models.BooleanField(default=False, verbose_name='Supports Inquiry')),
                ('supports_cancel', models.BooleanField(default=False, verbose_name='Supports Cancel')),
            ],
            options={
                'verbose_name': 'Payment Gateway',
                'verbose_name_plural': 'Payment Gateways',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceModifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('code', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Modifier Code')),
                ('description', models.CharField(max_length=500, verbose_name='Modifier Description')),
            ],
            options={
                'verbose_name': 'Service Modifier',
                'verbose_name_plural': 'Service Modifiers',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderDocumentType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Document Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_mandatory', models.BooleanField(default=False, verbose_name='Is Mandatory')),
                ('has_expiry_date', models.BooleanField(default=False, verbose_name='Has Expiry Date')),
                ('reminder_days_before_expiry', models.PositiveIntegerField(default=30, verbose_name='Reminder Days Before Expiry')),
            ],
            options={
                'verbose_name': 'Service Provider Document Type',
                'verbose_name_plural': 'Service Provider Document Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Type Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('requires_license', models.BooleanField(default=False, verbose_name='Requires License')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Service Provider Type',
                'verbose_name_plural': 'Service Provider Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AgentCommissionTerm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Term Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('condition_type', models.CharField(choices=[('member_count', 'Number of Members Registered'), ('beneficiary_count', 'Number of Beneficiaries Registered'), ('premium_volume', 'Total Premium Volume'), ('member_type', 'Specific Member Type'), ('time_period', 'Time Period Achievement'), ('retention_rate', 'Member Retention Rate')], max_length=20, verbose_name='Condition Type')),
                ('threshold_value', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Threshold Value')),
                ('member_types', models.CharField(blank=True, max_length=50, null=True, verbose_name='Applicable Member Types (comma-separated)')),
                ('period_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='Period in Days')),
                ('reward_type', models.CharField(choices=[('percentage', 'Percentage of Premium'), ('fixed_amount', 'Fixed Amount'), ('tiered_rate', 'Tiered Rate'), ('bonus', 'One-time Bonus')], max_length=15, verbose_name='Reward Type')),
                ('reward_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Reward Percentage')),
                ('reward_fixed_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Fixed Reward Amount')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('effective_from', models.DateField(verbose_name='Effective From')),
                ('effective_to', models.DateField(blank=True, null=True, verbose_name='Effective To')),
                ('priority', models.PositiveIntegerField(default=100, verbose_name='Priority')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commission_terms', to='configurations.agent')),
            ],
            options={
                'verbose_name': 'Agent Commission Term',
                'verbose_name_plural': 'Agent Commission Terms',
                'ordering': ['agent', 'priority', 'name'],
            },
        ),
        migrations.AddField(
            model_name='agent',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.currency', verbose_name='Main Currency'),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Member Name')),
                ('type', models.CharField(choices=[('CO', 'Corporate'), ('CM', 'Community'), ('HS', 'HealthSave'), ('IN', 'Individual'), ('FM', 'Family'), ('MF', 'Microfinance')], max_length=2, verbose_name='Member Type')),
                ('alias', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Alias')),
                ('membership_number', models.CharField(db_index=True, editable=False, max_length=8, unique=True, verbose_name='Membership Number')),
                ('logo', models.ImageField(blank=True, max_length=255, null=True, upload_to='member/logo', verbose_name='Logo')),
                ('address_line_1', models.CharField(max_length=255, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('address_line_3', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 3')),
                ('mobile', models.CharField(max_length=20, verbose_name='Mobile Number')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telephone')),
                ('email', models.EmailField(max_length=255, verbose_name='Email Address')),
                ('signing_rule', models.CharField(choices=[('S', 'Single'), ('D', 'Dual'), ('A', 'Any')], max_length=1, verbose_name='Signing Rule')),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('S', 'Suspended')], max_length=1, verbose_name='Status')),
                ('sponsor', models.CharField(choices=[('S', 'Self'), ('E', 'Employer'), ('G', 'Government')], max_length=1, verbose_name='Sponsor')),
                ('date_joined', models.DateField(auto_now_add=True, verbose_name='Date Joined')),
                ('stop_order_form', models.CharField(choices=[('off', 'Inactive'), ('per_day', 'Per Day'), ('per_week', 'Per Week'), ('per_month', 'Per Month')], default='off', max_length=10, verbose_name='Stop Order Cycle')),
                ('stop_order_amount', models.DecimalField(decimal_places=2, default=0, max_digits=11, verbose_name='Stop Order Amount')),
                ('stop_order_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Stop Order Number')),
                ('kyc_verified_at', models.DateTimeField(blank=True, null=True, verbose_name='KYC Verified At')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.currency', verbose_name='Main Currency')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_members', to='configurations.member', verbose_name='Parent Organization')),
                ('registered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registered_members', to='configurations.agent', verbose_name='Registered By Agent')),
                ('default_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.package', verbose_name='Default Package')),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
                'ordering': ['membership_number'],
            },
        ),
        migrations.CreateModel(
            name='AgentCommission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('commission_number', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Commission Number')),
                ('commission_type', models.CharField(choices=[('registration', 'Member Registration'), ('renewal', 'Member Renewal'), ('premium', 'Premium Commission'), ('bonus', 'Achievement Bonus'), ('override', 'Override Commission')], max_length=15, verbose_name='Commission Type')),
                ('base_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Base Amount')),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Commission Rate %')),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Commission Amount')),
                ('period_from', models.DateField(verbose_name='Period From')),
                ('period_to', models.DateField(verbose_name='Period To')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('C', 'Calculated'), ('A', 'Approved'), ('PD', 'Paid'), ('H', 'On Hold'), ('CN', 'Cancelled')], default='P', max_length=2, verbose_name='Status')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Payment Date')),
                ('payment_reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Payment Reference')),
                ('calculated_at', models.DateTimeField(blank=True, null=True, verbose_name='Calculated At')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='configurations.agent')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_commissions', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('calculated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calculated_commissions', to=settings.AUTH_USER_MODEL, verbose_name='Calculated By')),
                ('commission_term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='configurations.agentcommissionterm')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agent_commissions', to='configurations.member')),
            ],
            options={
                'verbose_name': 'Agent Commission',
                'verbose_name_plural': 'Agent Commissions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Payment Method Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('gateway_method_code', models.CharField(max_length=100, verbose_name='Gateway Method Code')),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Minimum Amount')),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Maximum Amount')),
                ('type', models.CharField(choices=[('C', 'Cash'), ('E', 'Electronic'), ('O', 'Offline'), ('MM', 'Mobile Money'), ('CC', 'Credit Card'), ('DC', 'Debit Card'), ('BT', 'Bank Transfer')], default='O', max_length=2, verbose_name='Method Type')),
                ('processing_fee_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Processing Fee %')),
                ('processing_fee_fixed', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Processing Fee (Fixed)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('sort_order', models.PositiveIntegerField(default=100, verbose_name='Sort Order')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='configurations.currency', verbose_name='Currency')),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='configurations.paymentgateway', verbose_name='Payment Gateway')),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'ordering': ['sort_order', 'name'],
                'unique_together': {('gateway', 'gateway_method_code')},
            },
        ),
        migrations.CreateModel(
            name='PaymentGatewayRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('request_id', models.CharField(max_length=255, unique=True, verbose_name='Request ID')),
                ('request_type', models.CharField(choices=[('payment', 'Payment'), ('refund', 'Refund'), ('inquiry', 'Inquiry'), ('cancel', 'Cancel')], max_length=20, verbose_name='Request Type')),
                ('request_url', models.URLField(verbose_name='Request URL')),
                ('request_method', models.CharField(default='POST', max_length=10, verbose_name='HTTP Method')),
                ('request_headers', models.JSONField(default=dict, verbose_name='Request Headers')),
                ('request_data', models.JSONField(default=dict, verbose_name='Request Data')),
                ('response_status_code', models.PositiveIntegerField(blank=True, null=True, verbose_name='Response Status Code')),
                ('response_headers', models.JSONField(default=dict, verbose_name='Response Headers')),
                ('response_data', models.JSONField(default=dict, verbose_name='Response Data')),
                ('request_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Request Timestamp')),
                ('response_timestamp', models.DateTimeField(blank=True, null=True, verbose_name='Response Timestamp')),
                ('processing_time_ms', models.PositiveIntegerField(blank=True, null=True, verbose_name='Processing Time (ms)')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('timeout', 'Timeout'), ('error', 'Error')], default='pending', max_length=20, verbose_name='Request Status')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Error Message')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Retry Count')),
                ('related_transaction', models.CharField(blank=True, max_length=255, null=True, verbose_name='Related Transaction')),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='configurations.paymentgateway')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='configurations.paymentmethod')),
            ],
            options={
                'verbose_name': 'Payment Gateway Request',
                'verbose_name_plural': 'Payment Gateway Requests',
                'ordering': ['-request_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('code', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Service Code')),
                ('description', models.CharField(max_length=500, verbose_name='Service Description')),
                ('unit_of_measure', models.CharField(default='Each', max_length=50, verbose_name='Unit of Measure')),
                ('base_price', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Base Price')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('requires_authorization', models.BooleanField(default=False, verbose_name='Requires Authorization')),
                ('requires_referral', models.BooleanField(default=False, verbose_name='Requires Referral')),
                ('is_emergency_service', models.BooleanField(default=False, verbose_name='Is Emergency Service')),
                ('service_provider_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='configurations.serviceprovidertype', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['service_provider_type', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Tier Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('level', models.PositiveIntegerField(verbose_name='Tier Level')),
                ('requirements', models.TextField(blank=True, null=True, verbose_name='Requirements')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Tier',
                'verbose_name_plural': 'Tiers',
                'ordering': ['level'],
                'unique_together': {('level',)},
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('account_no', models.CharField(db_index=True, editable=False, max_length=255, unique=True, verbose_name='Account Number')),
                ('logo', models.ImageField(blank=True, max_length=255, null=True, upload_to='provider/logo', verbose_name='Logo')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Name')),
                ('alias', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Alias')),
                ('identification_no', models.CharField(max_length=255, verbose_name='AFHOZ No.')),
                ('address_line_1', models.CharField(max_length=255, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('address_line_3', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 3')),
                ('mobile', models.CharField(max_length=20, verbose_name='Mobile Number')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telephone')),
                ('email', models.EmailField(max_length=255, verbose_name='Email Address')),
                ('date_joined', models.DateField(auto_now_add=True, verbose_name='Date Joined')),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('S', 'Suspended')], default='A', max_length=1)),
                ('bp_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='TIN Number')),
                ('council_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Council/Professional No')),
                ('hpa_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='HPA No')),
                ('is_from_network', models.BooleanField(default=False, verbose_name='Is a network service provider')),
                ('is_third_party', models.BooleanField(default=False, verbose_name='Is a third party service provider')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_units', to='configurations.serviceprovider', verbose_name='Parent Provider')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_providers', to='configurations.serviceprovidertype', verbose_name='Provider Type')),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_providers', to='configurations.tier', verbose_name='Provider Tier')),
            ],
            options={
                'verbose_name': 'Service Provider',
                'verbose_name_plural': 'Service Providers',
                'ordering': ['tier', 'type', 'name'],
                'unique_together': {('name', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='MemberKYCDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('document_file', models.FileField(upload_to='member/kyc/', verbose_name='Document File')),
                ('document_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document Number')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='Issue Date')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('issuing_authority', models.CharField(blank=True, max_length=255, null=True, verbose_name='Issuing Authority')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('V', 'Verified'), ('R', 'Rejected'), ('E', 'Expired')], default='P', max_length=1, verbose_name='Status')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Verified At')),
                ('rejection_reason', models.TextField(blank=True, null=True, verbose_name='Rejection Reason')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kyc_documents', to='configurations.member')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Verified By')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_documents', to='configurations.memberkycrequirement')),
            ],
            options={
                'verbose_name': 'Member KYC Document',
                'verbose_name_plural': 'Member KYC Documents',
                'ordering': ['member', 'requirement'],
                'unique_together': {('member', 'requirement')},
            },
        ),
        migrations.CreateModel(
            name='PaymentGatewayMapping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('field_type', models.CharField(choices=[('amount', 'Amount'), ('currency', 'Currency'), ('reference', 'Reference'), ('phone', 'Phone Number'), ('email', 'Email'), ('description', 'Description'), ('callback_url', 'Callback URL'), ('return_url', 'Return URL'), ('merchant_id', 'Merchant ID'), ('timestamp', 'Timestamp'), ('signature', 'Signature')], max_length=50, verbose_name='Field Type')),
                ('gateway_field_name', models.CharField(max_length=255, verbose_name='Gateway Field Name')),
                ('is_required', models.BooleanField(default=False, verbose_name='Is Required')),
                ('default_value', models.CharField(blank=True, max_length=500, null=True, verbose_name='Default Value')),
                ('transformation_rule', models.TextField(blank=True, null=True, verbose_name='Transformation Rule (JSON)')),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mappings', to='configurations.paymentgateway')),
            ],
            options={
                'verbose_name': 'Payment Gateway Mapping',
                'verbose_name_plural': 'Payment Gateway Mappings',
                'unique_together': {('gateway', 'field_type')},
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('document_file', models.FileField(upload_to='service_provider/documents/', verbose_name='Document File')),
                ('document_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document Number')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='Issue Date')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('issuing_authority', models.CharField(blank=True, max_length=255, null=True, verbose_name='Issuing Authority')),
                ('status', models.CharField(choices=[('V', 'Valid'), ('E', 'Expired'), ('P', 'Pending'), ('R', 'Rejected')], default='P', max_length=1, verbose_name='Document Status')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Verified At')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='configurations.serviceprovider')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Verified By')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider_documents', to='configurations.serviceproviderdocumenttype')),
            ],
            options={
                'verbose_name': 'Service Provider Document',
                'verbose_name_plural': 'Service Provider Documents',
                'ordering': ['service_provider', 'document_type'],
                'unique_together': {('service_provider', 'document_type')},
            },
        ),
        migrations.CreateModel(
            name='PackageLimit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('annual_limit', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Annual Limit')),
                ('per_visit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Per Visit Limit')),
                ('max_visits_per_year', models.PositiveIntegerField(default=0, verbose_name='Max Visits Per Year')),
                ('co_payment_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Co-payment %')),
                ('co_payment_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Co-payment Amount')),
                ('waiting_period_days', models.PositiveIntegerField(default=0, verbose_name='Waiting Period (Days)')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='limits', to='configurations.package')),
                ('service_provider_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_limits', to='configurations.serviceprovidertype')),
            ],
            options={
                'verbose_name': 'Package Limit',
                'verbose_name_plural': 'Package Limits',
                'ordering': ['package', 'service_provider_type'],
                'unique_together': {('package', 'service_provider_type')},
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderTypeRequirement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_required', models.BooleanField(default=True, verbose_name='Is Required')),
                ('withhold_payment_if_missing', models.BooleanField(default=False, verbose_name='Withhold Payment If Missing')),
                ('withhold_payment_if_expired', models.BooleanField(default=False, verbose_name='Withhold Payment If Expired')),
                ('withhold_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Withhold Percentage')),
                ('withhold_fixed_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Withhold Fixed Amount')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_requirements', to='configurations.serviceproviderdocumenttype')),
                ('provider_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='configurations.serviceprovidertype')),
            ],
            options={
                'verbose_name': 'Service Provider Type Requirement',
                'verbose_name_plural': 'Service Provider Type Requirements',
                'unique_together': {('provider_type', 'document_type')},
            },
        ),
        migrations.CreateModel(
            name='ServiceTierPrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('highest_amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Highest Amount Paid')),
                ('recommended_price', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Recommended Price')),
                ('max_payable_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Maximum Payable Amount')),
                ('effective_from', models.DateField(verbose_name='Effective From')),
                ('effective_to', models.DateField(blank=True, null=True, verbose_name='Effective To')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tier_prices', to='configurations.service')),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_prices', to='configurations.tier')),
            ],
            options={
                'verbose_name': 'Service Tier Price',
                'verbose_name_plural': 'Service Tier Prices',
                'ordering': ['service', 'tier', '-effective_from'],
                'unique_together': {('service', 'tier', 'effective_from')},
            },
        ),
    ]
