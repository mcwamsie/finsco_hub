# Generated by Django 5.2.4 on 2025-07-24 22:08

import django.contrib.auth.models
import django.utils.timezone
import phonenumber_field.modelfields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('national_id_no', models.CharField(blank=True, help_text='format:XX-XXXXXX-A-XX', max_length=150, null=True, verbose_name='National ID Number')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='users/profile-photos', verbose_name='Profile Photo')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=20, region=None, verbose_name='Phone Number')),
                ('alternative_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=20, null=True, region=None, verbose_name='Alternative Phone Number')),
                ('preferred_notification_method', models.CharField(choices=[('email', 'Email Only'), ('sms', 'SMS Only'), ('both', 'Email and SMS'), ('none', 'No Notifications')], default='both', max_length=10, verbose_name='Preferred Notification Method')),
                ('receive_sms_notifications', models.BooleanField(default=True, verbose_name='Receive SMS Notifications')),
                ('receive_email_notifications', models.BooleanField(default=True, verbose_name='Receive Email Notifications')),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('sn', 'Shona'), ('nd', 'Ndebele')], default='en', max_length=5, verbose_name='Preferred Language')),
                ('timezone', models.CharField(default='Africa/Harare', max_length=50, verbose_name='Timezone')),
                ('sms_quiet_hours_start', models.TimeField(blank=True, null=True, verbose_name='SMS Quiet Hours Start')),
                ('sms_quiet_hours_end', models.TimeField(blank=True, null=True, verbose_name='SMS Quiet Hours End')),
                ('email_quiet_hours_start', models.TimeField(blank=True, null=True, verbose_name='Email Quiet Hours Start')),
                ('email_quiet_hours_end', models.TimeField(blank=True, null=True, verbose_name='Email Quiet Hours End')),
                ('notify_member_registration', models.BooleanField(default=True, verbose_name='Member Registration')),
                ('notify_member_registration_sms', models.BooleanField(default=True, verbose_name='Member Registration SMS')),
                ('notify_member_registration_email', models.BooleanField(default=True, verbose_name='Member Registration Email')),
                ('notify_member_status_change', models.BooleanField(default=True, verbose_name='Member Status Changes')),
                ('notify_member_status_change_sms', models.BooleanField(default=True, verbose_name='Member Status Change SMS')),
                ('notify_member_status_change_email', models.BooleanField(default=True, verbose_name='Member Status Change Email')),
                ('notify_member_profile_update', models.BooleanField(default=False, verbose_name='Member Profile Updates')),
                ('notify_member_profile_update_sms', models.BooleanField(default=False, verbose_name='Member Profile Update SMS')),
                ('notify_member_profile_update_email', models.BooleanField(default=True, verbose_name='Member Profile Update Email')),
                ('notify_beneficiary_addition', models.BooleanField(default=True, verbose_name='Beneficiary Addition')),
                ('notify_beneficiary_addition_sms', models.BooleanField(default=True, verbose_name='Beneficiary Addition SMS')),
                ('notify_beneficiary_addition_email', models.BooleanField(default=True, verbose_name='Beneficiary Addition Email')),
                ('notify_beneficiary_removal', models.BooleanField(default=True, verbose_name='Beneficiary Removal')),
                ('notify_beneficiary_removal_sms', models.BooleanField(default=True, verbose_name='Beneficiary Removal SMS')),
                ('notify_beneficiary_removal_email', models.BooleanField(default=True, verbose_name='Beneficiary Removal Email')),
                ('notify_claim_submitted', models.BooleanField(default=True, verbose_name='Claim Submitted')),
                ('notify_claim_submitted_sms', models.BooleanField(default=True, verbose_name='Claim Submitted SMS')),
                ('notify_claim_submitted_email', models.BooleanField(default=True, verbose_name='Claim Submitted Email')),
                ('notify_claim_under_review', models.BooleanField(default=True, verbose_name='Claim Under Review')),
                ('notify_claim_under_review_sms', models.BooleanField(default=False, verbose_name='Claim Under Review SMS')),
                ('notify_claim_under_review_email', models.BooleanField(default=True, verbose_name='Claim Under Review Email')),
                ('notify_claim_approved', models.BooleanField(default=True, verbose_name='Claim Approved')),
                ('notify_claim_approved_sms', models.BooleanField(default=True, verbose_name='Claim Approved SMS')),
                ('notify_claim_approved_email', models.BooleanField(default=True, verbose_name='Claim Approved Email')),
                ('notify_claim_declined', models.BooleanField(default=True, verbose_name='Claim Declined')),
                ('notify_claim_declined_sms', models.BooleanField(default=True, verbose_name='Claim Declined SMS')),
                ('notify_claim_declined_email', models.BooleanField(default=True, verbose_name='Claim Declined Email')),
                ('notify_claim_modified', models.BooleanField(default=True, verbose_name='Claim Amount Modified')),
                ('notify_claim_modified_sms', models.BooleanField(default=True, verbose_name='Claim Modified SMS')),
                ('notify_claim_modified_email', models.BooleanField(default=True, verbose_name='Claim Modified Email')),
                ('notify_claim_paid', models.BooleanField(default=True, verbose_name='Claim Paid')),
                ('notify_claim_paid_sms', models.BooleanField(default=True, verbose_name='Claim Paid SMS')),
                ('notify_claim_paid_email', models.BooleanField(default=True, verbose_name='Claim Paid Email')),
                ('notify_claim_payment_failed', models.BooleanField(default=True, verbose_name='Claim Payment Failed')),
                ('notify_claim_payment_failed_sms', models.BooleanField(default=True, verbose_name='Claim Payment Failed SMS')),
                ('notify_claim_payment_failed_email', models.BooleanField(default=True, verbose_name='Claim Payment Failed Email')),
                ('notify_service_request_submitted', models.BooleanField(default=True, verbose_name='Service Request Submitted')),
                ('notify_service_request_submitted_sms', models.BooleanField(default=False, verbose_name='Service Request Submitted SMS')),
                ('notify_service_request_submitted_email', models.BooleanField(default=True, verbose_name='Service Request Submitted Email')),
                ('notify_authorization_approved', models.BooleanField(default=True, verbose_name='Authorization Approved')),
                ('notify_authorization_approved_sms', models.BooleanField(default=True, verbose_name='Authorization Approved SMS')),
                ('notify_authorization_approved_email', models.BooleanField(default=True, verbose_name='Authorization Approved Email')),
                ('notify_authorization_declined', models.BooleanField(default=True, verbose_name='Authorization Declined')),
                ('notify_authorization_declined_sms', models.BooleanField(default=True, verbose_name='Authorization Declined SMS')),
                ('notify_authorization_declined_email', models.BooleanField(default=True, verbose_name='Authorization Declined Email')),
                ('notify_authorization_expired', models.BooleanField(default=True, verbose_name='Authorization Expired')),
                ('notify_authorization_expired_sms', models.BooleanField(default=True, verbose_name='Authorization Expired SMS')),
                ('notify_authorization_expired_email', models.BooleanField(default=False, verbose_name='Authorization Expired Email')),
                ('notify_authorization_utilized', models.BooleanField(default=False, verbose_name='Authorization Utilized')),
                ('notify_authorization_utilized_sms', models.BooleanField(default=False, verbose_name='Authorization Utilized SMS')),
                ('notify_authorization_utilized_email', models.BooleanField(default=True, verbose_name='Authorization Utilized Email')),
                ('notify_topup_initiated', models.BooleanField(default=True, verbose_name='Top-up Initiated')),
                ('notify_topup_initiated_sms', models.BooleanField(default=True, verbose_name='Top-up Initiated SMS')),
                ('notify_topup_initiated_email', models.BooleanField(default=False, verbose_name='Top-up Initiated Email')),
                ('notify_topup_successful', models.BooleanField(default=True, verbose_name='Top-up Successful')),
                ('notify_topup_successful_sms', models.BooleanField(default=True, verbose_name='Top-up Successful SMS')),
                ('notify_topup_successful_email', models.BooleanField(default=True, verbose_name='Top-up Successful Email')),
                ('notify_topup_failed', models.BooleanField(default=True, verbose_name='Top-up Failed')),
                ('notify_topup_failed_sms', models.BooleanField(default=True, verbose_name='Top-up Failed SMS')),
                ('notify_topup_failed_email', models.BooleanField(default=True, verbose_name='Top-up Failed Email')),
                ('notify_low_balance', models.BooleanField(default=True, verbose_name='Low Balance Alert')),
                ('notify_low_balance_sms', models.BooleanField(default=True, verbose_name='Low Balance Alert SMS')),
                ('notify_low_balance_email', models.BooleanField(default=False, verbose_name='Low Balance Alert Email')),
                ('low_balance_threshold', models.DecimalField(decimal_places=2, default=100.0, max_digits=10, verbose_name='Low Balance Threshold')),
                ('notify_negative_balance', models.BooleanField(default=True, verbose_name='Negative Balance Alert')),
                ('notify_negative_balance_sms', models.BooleanField(default=True, verbose_name='Negative Balance Alert SMS')),
                ('notify_negative_balance_email', models.BooleanField(default=True, verbose_name='Negative Balance Alert Email')),
                ('notify_account_credited', models.BooleanField(default=True, verbose_name='Account Credited')),
                ('notify_account_credited_sms', models.BooleanField(default=True, verbose_name='Account Credited SMS')),
                ('notify_account_credited_email', models.BooleanField(default=False, verbose_name='Account Credited Email')),
                ('notify_account_debited', models.BooleanField(default=False, verbose_name='Account Debited')),
                ('notify_account_debited_sms', models.BooleanField(default=False, verbose_name='Account Debited SMS')),
                ('notify_account_debited_email', models.BooleanField(default=True, verbose_name='Account Debited Email')),
                ('notify_limit_warning', models.BooleanField(default=True, verbose_name='Limit Warning (80%)')),
                ('notify_limit_warning_sms', models.BooleanField(default=True, verbose_name='Limit Warning SMS')),
                ('notify_limit_warning_email', models.BooleanField(default=True, verbose_name='Limit Warning Email')),
                ('notify_limit_exceeded', models.BooleanField(default=True, verbose_name='Limit Exceeded')),
                ('notify_limit_exceeded_sms', models.BooleanField(default=True, verbose_name='Limit Exceeded SMS')),
                ('notify_limit_exceeded_email', models.BooleanField(default=True, verbose_name='Limit Exceeded Email')),
                ('notify_limit_reset', models.BooleanField(default=False, verbose_name='Annual Limit Reset')),
                ('notify_limit_reset_sms', models.BooleanField(default=False, verbose_name='Limit Reset SMS')),
                ('notify_limit_reset_email', models.BooleanField(default=True, verbose_name='Limit Reset Email')),
                ('notify_provider_registration', models.BooleanField(default=False, verbose_name='Provider Registration')),
                ('notify_provider_registration_sms', models.BooleanField(default=False, verbose_name='Provider Registration SMS')),
                ('notify_provider_registration_email', models.BooleanField(default=True, verbose_name='Provider Registration Email')),
                ('notify_provider_status_change', models.BooleanField(default=False, verbose_name='Provider Status Change')),
                ('notify_provider_status_change_sms', models.BooleanField(default=False, verbose_name='Provider Status Change SMS')),
                ('notify_provider_status_change_email', models.BooleanField(default=True, verbose_name='Provider Status Change Email')),
                ('notify_provider_document_expiry', models.BooleanField(default=False, verbose_name='Provider Document Expiry')),
                ('notify_provider_document_expiry_sms', models.BooleanField(default=False, verbose_name='Provider Document Expiry SMS')),
                ('notify_provider_document_expiry_email', models.BooleanField(default=True, verbose_name='Provider Document Expiry Email')),
                ('notify_provider_compliance_issue', models.BooleanField(default=False, verbose_name='Provider Compliance Issues')),
                ('notify_provider_compliance_issue_sms', models.BooleanField(default=False, verbose_name='Provider Compliance SMS')),
                ('notify_provider_compliance_issue_email', models.BooleanField(default=True, verbose_name='Provider Compliance Email')),
                ('notify_provider_payment', models.BooleanField(default=False, verbose_name='Provider Payment Processed')),
                ('notify_provider_payment_sms', models.BooleanField(default=False, verbose_name='Provider Payment SMS')),
                ('notify_provider_payment_email', models.BooleanField(default=True, verbose_name='Provider Payment Email')),
                ('notify_commission_earned', models.BooleanField(default=True, verbose_name='Commission Earned')),
                ('notify_commission_earned_sms', models.BooleanField(default=True, verbose_name='Commission Earned SMS')),
                ('notify_commission_earned_email', models.BooleanField(default=True, verbose_name='Commission Earned Email')),
                ('notify_commission_bonus', models.BooleanField(default=True, verbose_name='Commission Bonus')),
                ('notify_commission_bonus_sms', models.BooleanField(default=True, verbose_name='Commission Bonus SMS')),
                ('notify_commission_bonus_email', models.BooleanField(default=True, verbose_name='Commission Bonus Email')),
                ('notify_commission_threshold', models.BooleanField(default=True, verbose_name='Commission Threshold Reached')),
                ('notify_commission_threshold_sms', models.BooleanField(default=True, verbose_name='Commission Threshold SMS')),
                ('notify_commission_threshold_email', models.BooleanField(default=True, verbose_name='Commission Threshold Email')),
                ('notify_commission_payment', models.BooleanField(default=True, verbose_name='Commission Payment')),
                ('notify_commission_payment_sms', models.BooleanField(default=True, verbose_name='Commission Payment SMS')),
                ('notify_commission_payment_email', models.BooleanField(default=True, verbose_name='Commission Payment Email')),
                ('notify_kyc_required', models.BooleanField(default=True, verbose_name='KYC Required')),
                ('notify_kyc_required_sms', models.BooleanField(default=True, verbose_name='KYC Required SMS')),
                ('notify_kyc_required_email', models.BooleanField(default=True, verbose_name='KYC Required Email')),
                ('notify_kyc_document_uploaded', models.BooleanField(default=False, verbose_name='KYC Document Uploaded')),
                ('notify_kyc_document_uploaded_sms', models.BooleanField(default=False, verbose_name='KYC Document Uploaded SMS')),
                ('notify_kyc_document_uploaded_email', models.BooleanField(default=True, verbose_name='KYC Document Uploaded Email')),
                ('notify_kyc_verified', models.BooleanField(default=True, verbose_name='KYC Verified')),
                ('notify_kyc_verified_sms', models.BooleanField(default=True, verbose_name='KYC Verified SMS')),
                ('notify_kyc_verified_email', models.BooleanField(default=True, verbose_name='KYC Verified Email')),
                ('notify_kyc_rejected', models.BooleanField(default=True, verbose_name='KYC Rejected')),
                ('notify_kyc_rejected_sms', models.BooleanField(default=True, verbose_name='KYC Rejected SMS')),
                ('notify_kyc_rejected_email', models.BooleanField(default=True, verbose_name='KYC Rejected Email')),
                ('notify_document_expiry', models.BooleanField(default=True, verbose_name='Document Expiry Warning')),
                ('notify_document_expiry_sms', models.BooleanField(default=False, verbose_name='Document Expiry SMS')),
                ('notify_document_expiry_email', models.BooleanField(default=True, verbose_name='Document Expiry Email')),
                ('notify_login_success', models.BooleanField(default=False, verbose_name='Successful Login')),
                ('notify_login_success_sms', models.BooleanField(default=False, verbose_name='Login Success SMS')),
                ('notify_login_success_email', models.BooleanField(default=False, verbose_name='Login Success Email')),
                ('notify_failed_login', models.BooleanField(default=True, verbose_name='Failed Login Attempts')),
                ('notify_failed_login_sms', models.BooleanField(default=True, verbose_name='Failed Login SMS')),
                ('notify_failed_login_email', models.BooleanField(default=True, verbose_name='Failed Login Email')),
                ('notify_password_changed', models.BooleanField(default=True, verbose_name='Password Changed')),
                ('notify_password_changed_sms', models.BooleanField(default=True, verbose_name='Password Changed SMS')),
                ('notify_password_changed_email', models.BooleanField(default=True, verbose_name='Password Changed Email')),
                ('notify_account_locked', models.BooleanField(default=True, verbose_name='Account Locked')),
                ('notify_account_locked_sms', models.BooleanField(default=True, verbose_name='Account Locked SMS')),
                ('notify_account_locked_email', models.BooleanField(default=True, verbose_name='Account Locked Email')),
                ('notify_system_maintenance', models.BooleanField(default=True, verbose_name='System Maintenance')),
                ('notify_system_maintenance_sms', models.BooleanField(default=False, verbose_name='System Maintenance SMS')),
                ('notify_system_maintenance_email', models.BooleanField(default=True, verbose_name='System Maintenance Email')),
                ('notify_feature_updates', models.BooleanField(default=False, verbose_name='Feature Updates')),
                ('notify_feature_updates_sms', models.BooleanField(default=False, verbose_name='Feature Updates SMS')),
                ('notify_feature_updates_email', models.BooleanField(default=True, verbose_name='Feature Updates Email')),
                ('notify_policy_changes', models.BooleanField(default=True, verbose_name='Policy Changes')),
                ('notify_policy_changes_sms', models.BooleanField(default=False, verbose_name='Policy Changes SMS')),
                ('notify_policy_changes_email', models.BooleanField(default=True, verbose_name='Policy Changes Email')),
                ('notify_promotions', models.BooleanField(default=False, verbose_name='Promotions & Offers')),
                ('notify_promotions_sms', models.BooleanField(default=False, verbose_name='Promotions SMS')),
                ('notify_promotions_email', models.BooleanField(default=False, verbose_name='Promotions Email')),
                ('notify_newsletters', models.BooleanField(default=False, verbose_name='Newsletters')),
                ('notify_newsletters_sms', models.BooleanField(default=False, verbose_name='Newsletter SMS')),
                ('notify_newsletters_email', models.BooleanField(default=True, verbose_name='Newsletter Email')),
                ('notify_surveys', models.BooleanField(default=False, verbose_name='Surveys & Feedback')),
                ('notify_surveys_sms', models.BooleanField(default=False, verbose_name='Survey SMS')),
                ('notify_surveys_email', models.BooleanField(default=True, verbose_name='Survey Email')),
                ('notify_health_tips', models.BooleanField(default=False, verbose_name='Health Tips')),
                ('notify_health_tips_sms', models.BooleanField(default=False, verbose_name='Health Tips SMS')),
                ('notify_health_tips_email', models.BooleanField(default=True, verbose_name='Health Tips Email')),
                ('notify_emergency_alerts', models.BooleanField(default=True, verbose_name='Emergency Alerts')),
                ('notify_emergency_alerts_sms', models.BooleanField(default=True, verbose_name='Emergency Alerts SMS')),
                ('notify_emergency_alerts_email', models.BooleanField(default=True, verbose_name='Emergency Alerts Email')),
                ('notify_fraud_alerts', models.BooleanField(default=True, verbose_name='Fraud Alerts')),
                ('notify_fraud_alerts_sms', models.BooleanField(default=True, verbose_name='Fraud Alerts SMS')),
                ('notify_fraud_alerts_email', models.BooleanField(default=True, verbose_name='Fraud Alerts Email')),
                ('profile_id', models.UUIDField(blank=True, null=True, verbose_name='Profile ID')),
                ('designation', models.CharField(default='Admin', max_length=255, verbose_name='Designation')),
                ('type', models.CharField(choices=[('A', 'Administrator'), ('M', 'Member Admin'), ('S', 'Service Provider Admin'), ('G', 'Agent'), ('D', 'Account Manager')], default='A', max_length=1, verbose_name='User Type')),
                ('failed_login_attempts', models.PositiveIntegerField(default=0)),
                ('last_failed_login', models.DateTimeField(blank=True, null=True)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('password_changed_at', models.DateTimeField(blank=True, null=True)),
                ('force_password_change', models.BooleanField(default=False)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('login_count', models.PositiveIntegerField(default=0)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('two_factor_secret', models.CharField(blank=True, max_length=32, null=True)),
                ('backup_codes', models.JSONField(blank=True, default=list)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
